>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix2 = [
...     [9, 12, 15],
...     [18, 21, 24]
... ]
>>> print(matrix_divided(matrix2, 3))
[[3.0, 4.0, 5.0], [6.0, 7.0, 8.0]]

>>> matrix3 = [
...     [1.5, 2.5],
...     [3.5, 4.5]
... ]
>>> print(matrix_divided(matrix3, 2))
[[0.75, 1.25], [1.75, 2.25]]

>>> print(matrix_divided([[1]], 2))
[[0.5]]

>>> try:
...     matrix_divided("not a matrix", 2)
... except Exception as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats

>>> try:
...     matrix_divided([[1, 2], [3, "4"]], 2)
... except Exception as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats

>>> try:
...     matrix_divided([[1, 2], [3, 4, 5]], 2)
... except Exception as e:
...     print(e)
Each row of the matrix must have the same size

>>> try:
...     matrix_divided([[1, 2], [3, 4]], "2")
... except Exception as e:
...     print(e)
div must be a number

>>> try:
...     matrix_divided([[1, 2], [3, 4]], 0)
... except Exception as e:
...     print(e)
division by zero

>>> try:
...     matrix_divided([[float('inf'), 2], [3, 4]], 2)
... except Exception as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats

>>> try:
...     matrix_divided([[float('nan'), 2], [3, 4]], 2)
... except Exception as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats